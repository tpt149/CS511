<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>